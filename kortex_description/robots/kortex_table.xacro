<?xml version="1.0"?>
<!-- use this to generate urdf -->
<robot xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:macro name="load_robot" params="arm gripper dof vision sim prefix ee_joint_fixed">
            
        <!-- Files to include -->
        <xacro:include filename="$(find kortex_description)/arms/${arm}/${dof}dof/urdf/${arm}_macro.xacro" />
        <xacro:unless value="${not gripper}">
            <xacro:include filename="$(find kortex_description)/grippers/${gripper}/urdf/${gripper}_macro.xacro" />
        </xacro:unless>
        
        <xacro:if value="${sim}">
            <!-- Arm transmission elements-->
            <xacro:include filename="$(find kortex_description)/arms/${arm}/${dof}dof/urdf/${arm}_transmission_macro.xacro" />
            <!-- Gripper transmission elements if there is a gripper-->
            <xacro:unless value="${not gripper}">
                <xacro:include filename="$(find kortex_description)/grippers/${gripper}/urdf/${gripper}_transmission_macro.xacro" />
            </xacro:unless>
        </xacro:if>

        <!-- Run the macros -->

        <!-- For gazebo-->
        <xacro:if value="${sim}">
            <link name="world" />       
            <link name="table">
                <visual>
                    <origin xyz="0 0 0.01" rpy="1.5708 0 0" />
                    <geometry>
                        <mesh filename="package://kortex_description/meshes/environment/Table_v2.STL"/>
                    </geometry>
                </visual>
                <collision>
                    <origin xyz="0 0 0" rpy="1.5708 0 0" />
                    <geometry>
                        <mesh filename="package://kortex_description/meshes/environment/Table_v2.STL"/>
                    </geometry>
                </collision>
            </link>
            <link name="wall">
                <visual>
                    <geometry>
                        <mesh filename="package://kortex_description/meshes/environment/Wall.STL"/>
                    </geometry>
                </visual>
                <collision>
                    <geometry>
                        <mesh filename="package://kortex_description/meshes/environment/Wall.STL"/>
                    </geometry>
                </collision>
            </link>

        
            <!-- <link name="pelvis_link">
              <visual>
              <geometry>
                  <mesh filename="package://kortex_description/meshes/pelvis/pelvis_new.dae" scale="0.001 0.001 0.001"/>
              </geometry>
              </visual>
              <collision>
              <geometry>
                  <mesh filename="package://kortex_description/meshes/pelvis/pelvis_new.dae" scale="0.001 0.001 0.001"/>
              </geometry>
              </collision>
            </link> -->

            <joint name="world_joint" type="fixed">
                <parent link="world"/>
                <child link="table"/>
                <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
            </joint>

            <joint name="world2wall_joint" type="fixed">
                <parent link="world"/>
                <child link="wall"/>
                <origin rpy="1.5708 0.0 1.5708" xyz="0.0 0.32 0.0"/>
            </joint>

            <!-- <joint name="pelvis_joint" type="fixed">
                <parent link="table" />
                <child link = "pelvis_link" />
                <origin xyz="0.5 0.3 0.01" rpy="0.5 0 2.0" />
                <limit lower="-3.1416" upper="3.1416" effort="10" velocity="3"/>
                <axis xyz="0 1 0"/>
            </joint> -->
             
            <joint name="table_joint" type="fixed">
                <parent link="table" />
                <child link="${prefix}base_link" />
                <origin xyz="0 0 0" rpy="0 0 0" />    
            </joint>

            
            <!-- <gazebo reference="pelvis">
                <selfCollide>true</selfCollide>
            </gazebo> -->
            <gazebo reference="table">
                <selfCollide>true</selfCollide>
            </gazebo>
            <gazebo reference="wall">
                <selfCollide>true</selfCollide>
            </gazebo>
            <gazebo reference="${prefix}base_link">
                <selfCollide>true</selfCollide>
            </gazebo>

              <!-- Adding force-torque sensor plugin -->


        
        </xacro:if>
        
        <!-- Load the arm -->
        <xacro:load_arm parent="" dof="${dof}" vision="${vision}" prefix="${prefix}">
            <origin xyz="0 0 0" rpy="0 0 0"/> 
        </xacro:load_arm>

        <!-- Load the gripper -->
        <xacro:unless value="${not gripper}">
            <!-- last_arm_link is defined in "$(find kortex_description)/arms/${arm}/urdf/${arm}_macro.xacro" -->
            <xacro:load_gripper parent="${prefix}${last_arm_link}"  prefix="${prefix}"/> 
        </xacro:unless>
        <!-- If no gripper, define tool frame here -->
        <!-- TODO: If the following is changed, need to change also in kortex_robot and in robot_model (Kortex Control) -->
        <xacro:if value="${not gripper}">
            <link name="${prefix}tool_frame">
                <visual>
                    <origin xyz="0 0 0" rpy="0 0 0" />
                    <geometry>
                    <mesh filename="package://kortex_description/arms/gen3/${dof}dof/meshes/ReamerHead.STL"/>
                    </geometry>
                    <material name="">
                    <color rgba="0.75294 0.75294 0.75294 1" />
                    </material>
                </visual>
                <collision>
                    <origin xyz="0 0 0" rpy="0 0 0" />
                    <geometry>
                    <mesh filename="package://kortex_description/arms/gen3/${dof}dof/meshes/ReamerHead.STL"/>
                    </geometry>
                </collision>
            </link>

            <xacro:if value="${ee_joint_fixed}">
                <joint name="${prefix}tool_frame_joint" type="fixed">
                    <origin xyz="0 0 -0.0915" rpy="0 0 0" />
                    <parent link="${prefix}${last_arm_link}" />
                    <child link="${prefix}tool_frame" />
                    <axis xyz="0 0 1" />
                    <limit lower="-0.07" upper="0" effort="200" velocity="40" />
                </joint>
            </xacro:if>
            <xacro:unless value="${ee_joint_fixed}">
                <joint name="${prefix}tool_frame_joint" type="prismatic">
                    <origin xyz="0 0 -0.0915" rpy="0 0 0" />
                    <parent link="${prefix}${last_arm_link}" />
                    <child link="${prefix}tool_frame" />
                    <axis xyz="0 0 1" />
                    <limit lower="-0.07" upper="0" effort="200" velocity="40" />
                </joint>
            </xacro:unless>

            <link name="${prefix}reamer_head">
                <visual>
                    <origin xyz="0 0 0" rpy="0 0 0" />
                    <geometry>
                    <mesh filename="package://kortex_description/arms/gen3/${dof}dof/meshes/ReamingHead_48MM.STL"/>
                    </geometry>
                    <material name="">
                    <color rgba="0.75294 0.75294 0.75294 1" />
                    </material>
                </visual>
                <collision>
                    <origin xyz="0 0 0" rpy="0 0 0" />
                    <geometry>
                    <mesh filename="package://kortex_description/arms/gen3/${dof}dof/meshes/ReamingHead_48MM.STL"/>
                    </geometry>
                </collision>
            </link>
            <joint name="${prefix}reamer_head_joint" type="fixed">
                <origin xyz="0 0 0" rpy="0 0 0" />
                <parent link="${prefix}tool_frame" />
                <child link="${prefix}reamer_head" />
                <axis xyz="0 0 0" />
            </joint>

            <link name="${prefix}tool_tip_frame"/>
            <joint name="${prefix}tool_tip_frame_joint" type="fixed">
                <origin xyz="0 0 -0.024" rpy="0 0 0" />
                <parent link="${prefix}reamer_head" />
                <child link="${prefix}tool_tip_frame"/>
                <axis xyz="0 0 0" />
            </joint>
        </xacro:if>

        <!-- Load the Gazebo transmissions and gazebo_ros_control plugin -->
        <xacro:if value="${sim}">

            <xacro:load_gazebo_arm_transmissions prefix="${prefix}"/>

            <xacro:unless value="${not gripper}">
                <xacro:load_gazebo_gripper_transmissions prefix="${prefix}"/>
            </xacro:unless>

            <gazebo>
                <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
                    <legacyModeNS>true</legacyModeNS>
                </plugin>
            </gazebo>

        </xacro:if>
    </xacro:macro>
</robot>